// Mocks generated by Mockito 5.3.2 from annotations
// in tvseries/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:bloc/bloc.dart' as _i6;
import 'package:core/core.dart' as _i4;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tvseries/tvseries.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvSeriesUseCase_1 extends _i1.SmartFake
    implements _i3.TvSeriesUseCase {
  _FakeTvSeriesUseCase_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvState_2 extends _i1.SmartFake implements _i3.TvState {
  _FakeTvState_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TvRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvRepository extends _i1.Mock implements _i4.TvRepository {
  MockTvRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>> getOnAiringTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getOnAiringTv,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>.value(
                _FakeEither_0<_i4.Failure, List<_i4.TvSeries>>(
          this,
          Invocation.method(
            #getOnAiringTv,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>> getPopularTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTv,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>.value(
                _FakeEither_0<_i4.Failure, List<_i4.TvSeries>>(
          this,
          Invocation.method(
            #getPopularTv,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>> getTopRatedTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTv,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>.value(
                _FakeEither_0<_i4.Failure, List<_i4.TvSeries>>(
          this,
          Invocation.method(
            #getTopRatedTv,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, _i4.TvSeriesDetail>> getTvDetail(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvDetail,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i4.Failure, _i4.TvSeriesDetail>>.value(
                _FakeEither_0<_i4.Failure, _i4.TvSeriesDetail>(
          this,
          Invocation.method(
            #getTvDetail,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i4.Failure, _i4.TvSeriesDetail>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>> getTvRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvRecommendations,
          [id],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>.value(
                _FakeEither_0<_i4.Failure, List<_i4.TvSeries>>(
          this,
          Invocation.method(
            #getTvRecommendations,
            [id],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>> searchTv(
          String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTv,
          [query],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>.value(
                _FakeEither_0<_i4.Failure, List<_i4.TvSeries>>(
          this,
          Invocation.method(
            #searchTv,
            [query],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>> getWatchlistTv() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistTv,
          [],
        ),
        returnValue:
            _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>.value(
                _FakeEither_0<_i4.Failure, List<_i4.TvSeries>>(
          this,
          Invocation.method(
            #getWatchlistTv,
            [],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i4.Failure, List<_i4.TvSeries>>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, String>> saveWatchlistTv(
          _i4.TvSeriesDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveWatchlistTv,
          [tv],
        ),
        returnValue: _i5.Future<_i2.Either<_i4.Failure, String>>.value(
            _FakeEither_0<_i4.Failure, String>(
          this,
          Invocation.method(
            #saveWatchlistTv,
            [tv],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i4.Failure, String>>);
  @override
  _i5.Future<_i2.Either<_i4.Failure, String>> removeWatchlistTv(
          _i4.TvSeriesDetail? tv) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlistTv,
          [tv],
        ),
        returnValue: _i5.Future<_i2.Either<_i4.Failure, String>>.value(
            _FakeEither_0<_i4.Failure, String>(
          this,
          Invocation.method(
            #removeWatchlistTv,
            [tv],
          ),
        )),
      ) as _i5.Future<_i2.Either<_i4.Failure, String>>);
  @override
  _i5.Future<bool> isAddedToWatchlist(int? id) => (super.noSuchMethod(
        Invocation.method(
          #isAddedToWatchlist,
          [id],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [TvBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockTvBloc extends _i1.Mock implements _i3.TvBloc {
  MockTvBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TvSeriesUseCase get useCase => (super.noSuchMethod(
        Invocation.getter(#useCase),
        returnValue: _FakeTvSeriesUseCase_1(
          this,
          Invocation.getter(#useCase),
        ),
      ) as _i3.TvSeriesUseCase);
  @override
  _i3.TvState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeTvState_2(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.TvState);
  @override
  _i5.Stream<_i3.TvState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i5.Stream<_i3.TvState>.empty(),
      ) as _i5.Stream<_i3.TvState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);
  @override
  void add(_i3.TvEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onEvent(_i3.TvEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i3.TvState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void on<E extends _i3.TvEvent>(
    _i6.EventHandler<E, _i3.TvState>? handler, {
    _i6.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onTransition(_i6.Transition<_i3.TvEvent, _i3.TvState>? transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void onChange(_i6.Change<_i3.TvState>? change) => super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}
